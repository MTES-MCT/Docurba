# Generated by Django 5.1.5 on 2025-09-25 14:23

from typing import ClassVar

from django.db import migrations

ADD_COL = """
-- This does not work as the original materialized view will be impossible to delete
-- SQL Error [2BP01]: ERROR: cannot drop materialized view view_commune_adhesions_deep because other objects depend on it
-- Detail: materialized view temp depends on materialized view view_commune_adhesions_deep
-- create materialized view temp as
--  select concat_ws('_', cc.groupement_id, cc.commune_id) as id, cc.groupement_id, cc.commune_id from view_commune_adhesions_deep as cc;

CREATE MATERIALIZED VIEW IF NOT EXISTS temps AS
WITH RECURSIVE
	adhesion_paths AS (
		SELECT
			from_collectivite_id,
			type AS from_collectivite_type,
			to_collectivite_id,
			ARRAY[from_collectivite_id, to_collectivite_id] AS PATH
		FROM
			core_collectivite_adhesions
			JOIN core_collectivite ON core_collectivite_adhesions.from_collectivite_id = core_collectivite.id
		UNION
		SELECT
			adhesion_paths.from_collectivite_id,
			adhesion_paths.from_collectivite_type,
			core_collectivite_adhesions.to_collectivite_id,
			adhesion_paths.path || core_collectivite_adhesions.to_collectivite_id
		FROM
			adhesion_paths
			JOIN core_collectivite_adhesions ON core_collectivite_adhesions.from_collectivite_id = adhesion_paths.to_collectivite_id
	)
select
	concat_ws('_', from_collectivite_id, to_collectivite_id) as id,
	from_collectivite_id as commune_id,
	to_collectivite_id as groupement_id
FROM
	adhesion_paths
WHERE
	from_collectivite_type = 'COM'
GROUP BY
	commune_id,
	groupement_id;

-- Remove old one.
drop materialized view view_commune_adhesions_deep;

-- MV has been dropped so no need to drop its indexes.
-- drop index view_commune_adhesions_deep_commune_id_idx;
-- drop index view_commune_adhesions_deep_groupement_id_idx;

alter materialized view temps rename to view_commune_adhesions_deep;

CREATE INDEX IF NOT EXISTS view_commune_adhesions_deep_commune_id_idx ON view_commune_adhesions_deep (commune_id varchar_pattern_ops) include (groupement_id);

CREATE INDEX IF NOT EXISTS view_commune_adhesions_deep_groupement_id_idx ON view_commune_adhesions_deep (groupement_id varchar_pattern_ops) include (commune_id);

"""
ALTER_VIEW_ROLLBACK = """-- same as ADD_COL but without the ID"""


class Migration(migrations.Migration):
    dependencies: ClassVar[list] = [
        ("core", "0006_delete_viewcollectiviteadhesionsdeep"),
    ]

    # TODO: update other PR with ClassVar[list] only.
    operations: ClassVar[list] = [
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX id ON view_commune_adhesions_deep (groupement_id, commune_id);",
            # reverse_sql=ALTER_VIEW_ROLLBACK,
            reverse_sql="",
            # state_operations=[],
        ),
    ]
