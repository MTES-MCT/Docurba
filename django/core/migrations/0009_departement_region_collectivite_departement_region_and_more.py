# Generated by Django 5.1.5 on 2025-08-24 17:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_delete_cog'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_insee', models.CharField(unique=True)),
                ('nom', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_insee', models.CharField(unique=True)),
                ('nom', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Collectivite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_type', models.CharField(unique=True)),
                ('code_insee_unique', models.CharField(db_comment='Peut-être vide pour une COMD ayant le même code que sa commune parente', null=True, unique=True)),
                ('type', models.CharField(choices=[('COM', 'Commune'), ('COMD', 'Commune déléguée'), ('COMA', 'Commune associée'), ('CC', 'Communauté de communes'), ('SMF', 'Syndicat Mixte Fermé'), ('SMO', 'Syndicat Mixte Ouvert'), ('METRO', 'Métropole'), ('CU', 'Communauté Urbaine'), ('PETR', "Pôle d'Équilibre Territorial et Rural"), ('MET69', 'Métropole de Lyon'), ('SIVU', 'Syndicat Intercommunal à Vocation Unique'), ('EPT', 'Établissement Public Territorial'), ('CA', "Communauté d'Agglomération"), ('POLEM', 'Pôle Métropolitain'), ('SIVOM', 'Syndicat Intercommunal à Vocation Multiple')])),
                ('nom', models.CharField()),
                ('competence_plan', models.BooleanField(db_default=False)),
                ('competence_schema', models.BooleanField(db_default=False)),
                ('adhesions', models.ManyToManyField(related_name='collectivites_adherentes', to='core.collectivite')),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='collectivites', to='core.departement')),
            ],
        ),
        migrations.AddField(
            model_name='departement',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='departements', to='core.region'),
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('collectivite_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.collectivite')),
                ('code_type_copie', models.CharField(db_comment='Copie du champ parent pendant la transition', unique=True)),
                ('adhesions_deep', models.ManyToManyField(related_name='communes_adherentes_deep', through='core.ViewCommuneAdhesionsDeep', to='core.collectivite')),
                ('intercommunalite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='communes', to='core.collectivite')),
                ('nouvelle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='deleguee', to='core.commune')),
                ('procedures', models.ManyToManyField(related_name='perimetre', through='core.CommuneProcedure', to='core.procedure')),
            ],
            options={
                'indexes': [models.Index(condition=models.Q(('nouvelle__isnull', True)), fields=['code_type_copie'], name='collectivite_nouvelle_null_idx')],
            },
            bases=('core.collectivite',),
        ),
    ]
