# Generated by Django 5.1.5 on 2025-04-21 12:08
# ruff: noqa: RUF012
import django.db.models.deletion
from django.db import migrations, models

CREATE_VIEW = """
CREATE MATERIALIZED VIEW IF NOT EXISTS view_core_collectivite_adhesions_deep AS
WITH RECURSIVE
	adhesion_paths AS (
		SELECT
			from_collectivite_id,
			to_collectivite_id,
			ARRAY[from_collectivite_id, to_collectivite_id] AS PATH
		FROM
			core_collectivite_adhesions

		UNION

		SELECT
			adhesion_paths.from_collectivite_id,
			core_collectivite_adhesions.to_collectivite_id,
			adhesion_paths.path || core_collectivite_adhesions.to_collectivite_id
		FROM
			adhesion_paths
			JOIN core_collectivite_adhesions ON core_collectivite_adhesions.from_collectivite_id = adhesion_paths.to_collectivite_id
	)
SELECT
	*
FROM
	adhesion_paths
"""

CREATE_INDEX_FROM_COLLECTIVITE = """
CREATE INDEX IF NOT EXISTS view_core_collectivite_adhesions_deep_from_collectivite_id_idx ON view_core_collectivite_adhesions_deep (from_collectivite_id) include (to_collectivite_id)
"""
CREATE_INDEX_TO_COLLECTIVITE = """
CREATE INDEX IF NOT EXISTS view_core_collectivite_adhesions_deep_to_collectivite_id_idx ON view_core_collectivite_adhesions_deep (to_collectivite_id) include (from_collectivite_id)
"""

DROP_VIEW = "DROP MATERIALIZED VIEW if EXISTS view_core_collectivite_adhesions_deep"


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_rename_code_insee_collectivite_code_insee_unique"),
    ]

    operations = [
        migrations.RunSQL(
            sql=f"""{CREATE_VIEW};
            {CREATE_INDEX_FROM_COLLECTIVITE};
            {CREATE_INDEX_TO_COLLECTIVITE}
            """,
            reverse_sql=DROP_VIEW,
            state_operations=[
                migrations.CreateModel(
                    name="ViewCollectiviteAdhesionsDeep",
                    fields=[
                        (
                            "from_collectivite",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.DO_NOTHING,
                                related_name="+",
                                to="core.collectivite",
                            ),
                        ),
                        (
                            "to_collectivite",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.DO_NOTHING,
                                related_name="+",
                                to="core.collectivite",
                            ),
                        ),
                    ],
                    options={
                        "db_table": "view_core_collectivite_adhesions_deep",
                        "managed": False,
                    },
                ),
                migrations.AddField(
                    model_name="collectivite",
                    name="adhesions_deep",
                    field=models.ManyToManyField(
                        related_name="collectivites_adherentes_deep",
                        through="core.ViewCollectiviteAdhesionsDeep",
                        to="core.collectivite",
                    ),
                ),
            ],
        ),
    ]
