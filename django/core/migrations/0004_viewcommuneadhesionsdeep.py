# Generated by Django 5.1.5 on 2025-04-21 12:08
# ruff: noqa: RUF012
from django.db import migrations, models

CREATE_VIEW = """
CREATE MATERIALIZED VIEW IF NOT EXISTS view_commune_adhesions_deep AS
WITH RECURSIVE
	adhesion_paths AS (
		SELECT
			from_collectivite_id,
			type AS from_collectivite_type,
			to_collectivite_id,
			ARRAY[from_collectivite_id, to_collectivite_id] AS PATH
		FROM
			core_collectivite_adhesions
			JOIN core_collectivite ON core_collectivite_adhesions.from_collectivite_id = core_collectivite.id
		UNION
		SELECT
			adhesion_paths.from_collectivite_id,
			adhesion_paths.from_collectivite_type,
			core_collectivite_adhesions.to_collectivite_id,
			adhesion_paths.path || core_collectivite_adhesions.to_collectivite_id
		FROM
			adhesion_paths
			JOIN core_collectivite_adhesions ON core_collectivite_adhesions.from_collectivite_id = adhesion_paths.to_collectivite_id
	)
SELECT
	from_collectivite_id as commune_id,
	to_collectivite_id as groupement_id
FROM
	adhesion_paths
WHERE
	from_collectivite_type = 'COM'
GROUP BY
	commune_id,
	groupement_id;
"""

CREATE_INDEX_FROM_COLLECTIVITE = """
CREATE INDEX IF NOT EXISTS view_commune_adhesions_deep_commune_id_idx ON view_commune_adhesions_deep (commune_id varchar_pattern_ops) include (groupement_id)
"""
CREATE_INDEX_TO_COLLECTIVITE = """
CREATE INDEX IF NOT EXISTS view_commune_adhesions_deep_groupement_id_idx ON view_commune_adhesions_deep (groupement_id varchar_pattern_ops) include (commune_id)
"""

DROP_VIEW = "DROP MATERIALIZED VIEW if EXISTS view_commune_adhesions_deep"


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0003_vuecollectiviteadhesionsdeep"),
    ]

    operations = [
        migrations.RunSQL(
            sql=f"""{CREATE_VIEW};
            {CREATE_INDEX_FROM_COLLECTIVITE};
            {CREATE_INDEX_TO_COLLECTIVITE}
            """,
            reverse_sql=DROP_VIEW,
            state_operations=[
                migrations.CreateModel(
                    name="ViewCommuneAdhesionsDeep",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                    ],
                    options={
                        "db_table": "view_commune_adhesions_deep",
                        "managed": False,
                    },
                ),
                migrations.RemoveField(
                    model_name="collectivite",
                    name="adhesions_deep",
                ),
                migrations.AddField(
                    model_name="commune",
                    name="adhesions_deep",
                    field=models.ManyToManyField(
                        related_name="communes_adherentes_deep",
                        through="core.ViewCommuneAdhesionsDeep",
                        to="core.collectivite",
                    ),
                ),
            ],
        ),
    ]
